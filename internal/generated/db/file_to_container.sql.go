// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.0
// source: file_to_container.sql

package db

import (
	"context"

	"github.com/google/uuid"
)

const addFileToContainer = `-- name: AddFileToContainer :one
INSERT INTO file_to_container(
    file_uuid,
    container_uuid
)
VALUES ($1, $2)
RETURNING file_to_container_uuid
`

type AddFileToContainerParams struct {
	FileUuid      string    `json:"file_uuid"`
	ContainerUuid uuid.UUID `json:"container_uuid"`
}

func (q *Queries) AddFileToContainer(ctx context.Context, arg AddFileToContainerParams) (uuid.UUID, error) {
	row := q.db.QueryRow(ctx, addFileToContainer, arg.FileUuid, arg.ContainerUuid)
	var file_to_container_uuid uuid.UUID
	err := row.Scan(&file_to_container_uuid)
	return file_to_container_uuid, err
}

const removeFileFromContainer = `-- name: RemoveFileFromContainer :exec
DELETE FROM file_to_container 
WHERE file_to_container_uuid = $1
`

func (q *Queries) RemoveFileFromContainer(ctx context.Context, fileToContainerUuid uuid.UUID) error {
	_, err := q.db.Exec(ctx, removeFileFromContainer, fileToContainerUuid)
	return err
}
