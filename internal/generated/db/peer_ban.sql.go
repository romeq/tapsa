// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.0
// source: peer_ban.sql

package db

import (
	"context"
)

const banPeer = `-- name: BanPeer :exec
INSERT INTO
    peer_ban(peer_id)
VALUES
    ($1)
`

func (q *Queries) BanPeer(ctx context.Context, peerID string) error {
	_, err := q.db.Exec(ctx, banPeer, peerID)
	return err
}

const isBanned = `-- name: IsBanned :one
SELECT
    peer_id
FROM
    peer_ban
WHERE
    peer_id = $1
`

func (q *Queries) IsBanned(ctx context.Context, peerID string) (string, error) {
	row := q.db.QueryRow(ctx, isBanned, peerID)
	var peer_id string
	err := row.Scan(&peer_id)
	return peer_id, err
}

const removeBan = `-- name: RemoveBan :exec
DELETE FROM
    peer_ban
WHERE
    peer_id = $1
`

func (q *Queries) RemoveBan(ctx context.Context, peerID string) error {
	_, err := q.db.Exec(ctx, removeBan, peerID)
	return err
}
